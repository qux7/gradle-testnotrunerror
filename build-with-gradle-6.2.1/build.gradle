
plugins {
    id 'java-gradle-plugin'
    id 'groovy'
    id 'maven-publish'
}

group 'io.github.qux7'
version '0.1.0'

repositories {
    jcenter()
}

dependencies {
    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
}

gradlePlugin {
    plugins {
        testnotrunerror {
            id = 'io.github.qux7.testnotrunerror'
            implementationClass = 'io.github.qux7.testnotrunerror.TestNotRunErrorPlugin'
        }
    }
}

// Add a source set for the functional test suite
sourceSets {
    functionalTest {
    }
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)
configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

// Add a task to run the functional tests
task functionalTest(type: Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
}

check {
    // Run the functional tests as part of `check`
    dependsOn(tasks.functionalTest)
}

java {
    targetCompatibility = JavaVersion.VERSION_1_8
}
//println('=============================')
//println("rootProject(name, version, group): $rootProject.name $rootProject.version $rootProject.group")
//println("project(name, version, group): $project.name $project.version $project.group")
//println "Running gradle version: $gradle.gradleVersion"
//println "Running gradle version: ${gradle.gradleVersion.getClass()}"
//println('classPath: '+System.getProperty("java.class.path"))
//println('=============================')
//file('.')
publishing {
    publications {
        maven(MavenPublication) {
            groupId = project.group
            artifactId = project.name
            version = project.version

            from components.java
        }
    }
}

project.tasks.withType(Test) {testLogging.showStandardStreams = true }

