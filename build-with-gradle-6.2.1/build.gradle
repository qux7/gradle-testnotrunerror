
plugins {
    id 'java-gradle-plugin'
    id 'groovy'
    id 'maven-publish'
    id 'com.gradle.plugin-publish' version '1.2.1'
}

group 'io.github.qux7'
version '0.1.1'

repositories {
    jcenter()
}

dependencies {
    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
}
pluginBundle {
    website = 'https://github.com/qux7/gradle-testnotrunerror'
    vcsUrl = 'https://github.com/qux7/gradle-testnotrunerror'
    tags = [
            'test', 'testing', 'test automation', 'automation',
            'java',
            'junit', 'junit-jupiter', 'junit5',
            'integration testing', 'integrationTesting', 'integration-test',
            'functional testing', 'functionalTesting', 'functional-test',
            'unit testing', 'unitTesting', 'unit-test'
    ]
}
gradlePlugin {
    plugins {
        testnotrunerror {
            id = 'io.github.qux7.testnotrunerror'
            implementationClass = 'io.github.qux7.testnotrunerror.TestNotRunErrorPlugin'
            displayName = "Test Not Run Error Plugin"
            description = "Detects test configuration errors: build fails if you misconfigure tests and they do not run"
        }
    }
}

// Add a source set for the functional test suite
sourceSets {
    functionalTest {
    }
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)
configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

// Add a task to run the functional tests
task functionalTest(type: Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
}

check {
    // Run the functional tests as part of `check`
    dependsOn(tasks.functionalTest)
}

java {
    targetCompatibility = JavaVersion.VERSION_1_8
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = project.group
            artifactId = project.name
            version = project.version

            from components.java
        }
    }
}

project.tasks.withType(Test) {testLogging.showStandardStreams = true }

